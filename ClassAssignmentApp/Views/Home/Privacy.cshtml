@{
    ViewData["Title"] = "Mission Statement";
}
<div style="margin-left:300px;margin-bottom:20px;">
    <h1>@ViewData["Title"]</h1>
</div>


<h3>
    <p>Tom Romano - Microsoft .Net Full Stack Developer</p>
</h3>
<p>
    Tom has been developing applications using the Microsoft technology stack since the days of Visual Basic and Client/Server.
    His is main commitment has always been to excellence in software development as it relates to both customer satisfaction
    and adherence to the highest technical industry standards.
    During this time, he has been involved in all phases of the development cycle for a wide variety of application types. Most of his
    experience has to do with the actual programming of the application, but also includes database design, documentation, user
    training, and translation of business requirements into application functionality. 
</p>
<p>
    Specific skill sets include:
    C# .Net, VB .Net, TSQL, JavaScript, JQuery, Telerik, LINQ, SSRS, XML, C, VB6.0, MS Access, EXCEL, VBA,
    .NET Framework 1.0 - 4.5, ASP.NET, WinForms, WPF, Web Forms, MVC, .NET Class Libraries, ADO.NET, Entity Framework,
    HTML5, AJAX, CSS, OOP, SSRS, Source Safe, Team Foundation Server, Subversion, Github, JIRA,
    MS EXCEL/Macro and workbook formulas, SDLC Workspace
<br />
    Most recently: C#, MVC .Net Core 9, WEB API, and SQL Server 2022
</p>
<p>
    During the course of the past year, Tom has taken a number of on-line courses including:
    <ul>
        <li>ASP .NET Core 9</li>
        <li>Building Minimal API's</li>
        <li>The Complete ASP .NET MVC</li>
    </ul>
    This application was constructed by Tom to demonstrate his development capabilities, using his newly acquired skills.
    It is a fictional application which provides for the registration of all students and instructors attending an imaginary
    school or college. CRUD functionality is provided for all students, instructors, courses, and classrooms located in any
    number of buildings. Once data entries have been made for these entities, the user can then proceed to construct schedules for
    each of the instructors to teach specific courses on a weekly schedule which specifies a day of week, time of day, and
    building/classroom location for each instructor and course to be taught. After schedules for courses have all been defined,
    each student may now be registered/assigned to any of the courses. Checks are in place to avoid conflicting schedules for
    instructors, students, and classrooms assigned.
</p>
<p>
    Please be advised that, in the construction of this application, provisions have not been made to cover such items as data
    security, authentication, and authorization. These concerns are usually addressed with customized system routines, provided in
    a universal way, for all applications within a given organization, and could certainly be applied to this application as well.
</p>
